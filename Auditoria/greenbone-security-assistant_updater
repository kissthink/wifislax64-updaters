#!/bin/sh

# Script by www.seguridadwireless.net

SCRIPT_VERSION=20170526

############################################################
## Funciones comunes. Su nombre empieza por f_ ##
############################################################
f_variables(){
	. /opt/wifislax-updaters/Funciones/funciones_updater
}

############################################################
## Funciones propias del script. Su nombre empieza por F_ ##
############################################################
# Definicion de variables
F_variables() {
	PRGNAM=greenbone-security-assistant
	echo -ne "\033]2;${PRGNAM}_updater\007"
	WEB="http://wald.intevation.org"
	WEB_contenido=$(curl -sk $WEB/frs/?group_id=29 |grep "$PRGNAM")
	SOURCES=$(echo "$WEB_contenido" | grep -Po '">\K.*(?=</.>)' | grep "tar\.gz$" | sort -V | tail -1)
	VERSION=$(echo "$SOURCES" | rev | cut -d. -f3-|rev| sed "s/$PRGNAM//g" | cut -d- -f2)
	EXTENSION=tar.gz
	CD=$PRGNAM-$VERSION
	DOWNLOAD="${WEB}$(echo "$WEB_contenido"|grep "$SOURCES"|grep -Po 'href="\K.*(?=")' |grep "tar\.gz$")"
}

# Comprobar dependencias
F_dependencias(){
DEPENDENCIAS="openvas-libraries libmicrohttpd"
f_dependencias
}

# Descomprimimos el fichero descargado y compilamos
F_compilar(){

mkdir -p build
cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLOCALSTATEDIR=/var \
    -DSYSCONFDIR=/etc \
    -DCMAKE_BUILD_TYPE=Release ..
  make  || exit 1
  make install DESTDIR=$PKG

cd ..
mkdir -p $PKG/etc/rc.d
echo "#!/bin/sh
#
# /etc/rc.d/rc.gsad
#
# Start/stop/restart the Greenbone Security Assistant Daemon.
#
# To make Greenbone SA start automatically at boot, make this
# file executable:  chmod 755 /etc/rc.d/rc.gsad
# and add to rc.local:
# if [ -x /etc/rc.d/rc.gsad ]; then
#   . /etc/rc.d/rc.gsad start
# fi
#

GSAD_PATH=/usr/sbin
GSAD_BIN=gsad
GSAD_OPTIONS=\"-p 9392 --timeout=60 --gnutls-priorities=SECURE128:-VERS-SSL3.0\"
GSAD_CMD=\"\$GSAD_PATH/\$GSAD_BIN \$GSAD_OPTIONS\"

gsad_start() {
  echo Starting Greenbone Security Assistant: \$GSAD_CMD
  \$GSAD_CMD
}

gsad_stop() {
  echo \"Stopping Greenbone Security Assistant\"
  /bin/killall \$GSAD_BIN
}

gsad_restart() {
  gsad_stop
  gsad_start
}

case \"\$1\" in
'start')
  gsad_start
  ;;
'stop')
  gsad_stop
  ;;
'restart')
  gsad_restart
  ;;
*)
  echo \"usage \$0 start|stop|restart\"
esac
" > $PKG/etc/rc.d/rc.gsad
chmod 0644 $PKG/etc/rc.d/rc.gsad
mv $PKG/usr/share/man $PKG/usr
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
}

###################################
## BLOQUE PRINCIPAL DE EJECUCION ##
###################################
# Si se cierra el script inesperadamente, ejecutar la funcion de limpieza
trap f_exitmode SIGHUP SIGINT

#Inicializamos las variables globales
f_variables
#Comprobamos conexion a Internet
f_comprobarConexion
#Inicializamos las variables del script
F_variables
#Creamos directorio de trabajo
f_directorioTemporal
#Mostramos el mensaje de presentacion
f_presentacion
#Comprobamos updates del script
f_comprobarUpdates
#Asignamos o detectamos arquitectura
f_arquitectura
#Comprobamos version instalada del paquete
f_versionInstalada
#Compronar dependencias
F_dependencias
#Si no existe el fichero se descargara
f_download
#Preparamos entorno
f_preparar
#Descomprimir fichero descargado y compilamos
F_compilar
#Hacemos strip sobre el paquete
f_strip
#Creamos xzm , instalamos y salimos
f_tareasFinales